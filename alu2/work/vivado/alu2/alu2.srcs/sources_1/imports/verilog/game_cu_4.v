/*
   This file was generated automatically by Alchitry Labs version 1.2.7.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module game_cu_4 (
    input clk,
    input rst,
    input [8:0] button,
    input clear_button,
    input pass_button,
    input reset_button,
    input z,
    input [15:0] time,
    output reg we,
    output reg [1:0] wdsel,
    output reg [2:0] asel,
    output reg [2:0] bsel,
    output reg [5:0] alufn,
    output reg [3:0] wr,
    output reg [15:0] button_sig,
    output reg increase
  );
  
  
  
  
  localparam START_game_fsm = 5'd0;
  localparam SET_PATTERN_game_fsm = 5'd1;
  localparam SET_DECREMENT_TIMER_game_fsm = 5'd2;
  localparam IDLE_game_fsm = 5'd3;
  localparam CLEAR_BOARD_game_fsm = 5'd4;
  localparam GENERATE_PATTERN_game_fsm = 5'd5;
  localparam ADD_LEVEL_game_fsm = 5'd6;
  localparam CHECK_LEVEL_game_fsm = 5'd7;
  localparam CHECK_LEVEL_TRANS_game_fsm = 5'd8;
  localparam CHECK_PATTERN_game_fsm = 5'd9;
  localparam ADD_SCORE_game_fsm = 5'd10;
  localparam UPDATE_STATE1_game_fsm = 5'd11;
  localparam UPDATE_STATE2_game_fsm = 5'd12;
  localparam UPDATE_STATE3_game_fsm = 5'd13;
  localparam UPDATE_STATE4_game_fsm = 5'd14;
  localparam UPDATE_STATE5_game_fsm = 5'd15;
  localparam UPDATE_STATE6_game_fsm = 5'd16;
  localparam UPDATE_STATE7_game_fsm = 5'd17;
  localparam UPDATE_STATE8_game_fsm = 5'd18;
  localparam UPDATE_STATE9_game_fsm = 5'd19;
  localparam UPDATE_TRANS_game_fsm = 5'd20;
  localparam CHECK_TIME_game_fsm = 5'd21;
  localparam DECRESE_GAME_TIMER_game_fsm = 5'd22;
  localparam GAMEOVER_game_fsm = 5'd23;
  
  reg [4:0] M_game_fsm_d, M_game_fsm_q = START_game_fsm;
  
  always @* begin
    M_game_fsm_d = M_game_fsm_q;
    
    we = 1'h0;
    wdsel = 2'h0;
    asel = 3'h0;
    bsel = 3'h0;
    alufn = 6'h00;
    wr = 4'h0;
    button_sig = 16'h0000;
    increase = 1'h0;
    
    case (M_game_fsm_q)
      START_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h1;
        wr = 16'h0001;
        M_game_fsm_d = SET_PATTERN_game_fsm;
      end
      SET_PATTERN_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h2;
        wr = 16'h0000;
        M_game_fsm_d = IDLE_game_fsm;
      end
      IDLE_game_fsm: begin
        if (clear_button) begin
          M_game_fsm_d = CLEAR_BOARD_game_fsm;
        end else begin
          if (button[0+0-:1]) begin
            M_game_fsm_d = UPDATE_STATE1_game_fsm;
          end else begin
            if (button[1+0-:1]) begin
              M_game_fsm_d = UPDATE_STATE2_game_fsm;
            end else begin
              if (button[2+0-:1]) begin
                M_game_fsm_d = UPDATE_STATE3_game_fsm;
              end else begin
                if (button[3+0-:1]) begin
                  M_game_fsm_d = UPDATE_STATE4_game_fsm;
                end else begin
                  if (button[4+0-:1]) begin
                    M_game_fsm_d = UPDATE_STATE5_game_fsm;
                  end else begin
                    if (button[5+0-:1]) begin
                      M_game_fsm_d = UPDATE_STATE6_game_fsm;
                    end else begin
                      if (button[6+0-:1]) begin
                        M_game_fsm_d = UPDATE_STATE7_game_fsm;
                      end else begin
                        if (button[7+0-:1]) begin
                          M_game_fsm_d = UPDATE_STATE8_game_fsm;
                        end else begin
                          if (button[8+0-:1]) begin
                            M_game_fsm_d = UPDATE_STATE9_game_fsm;
                          end else begin
                            if (pass_button) begin
                              M_game_fsm_d = CHECK_LEVEL_game_fsm;
                            end else begin
                              M_game_fsm_d = IDLE_game_fsm;
                            end
                          end
                        end
                      end
                    end
                  end
                end
              end
            end
          end
        end
      end
      CLEAR_BOARD_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h1;
        wr = 16'h0001;
        M_game_fsm_d = IDLE_game_fsm;
      end
      UPDATE_STATE1_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0001;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE2_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0002;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE3_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0004;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE4_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0008;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE5_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0010;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE6_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0020;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE7_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0040;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE8_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0080;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_STATE9_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h1;
        bsel = 3'h0;
        alufn = 6'h3f;
        wr = 16'h0001;
        button_sig = 16'h0100;
        M_game_fsm_d = UPDATE_TRANS_game_fsm;
      end
      UPDATE_TRANS_game_fsm: begin
        if (z == 1'h1) begin
          M_game_fsm_d = ADD_SCORE_game_fsm;
        end else begin
          M_game_fsm_d = IDLE_game_fsm;
        end
      end
      ADD_SCORE_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h0;
        asel = 3'h4;
        bsel = 3'h2;
        alufn = 6'h00;
        wr = 16'h0002;
        increase = 1'h1;
        M_game_fsm_d = CHECK_LEVEL_game_fsm;
      end
      CHECK_LEVEL_game_fsm: begin
        asel = 3'h3;
        bsel = 3'h1;
        alufn = 6'h33;
        M_game_fsm_d = CHECK_LEVEL_TRANS_game_fsm;
      end
      CHECK_LEVEL_TRANS_game_fsm: begin
        if (z == 1'h1) begin
          M_game_fsm_d = GAMEOVER_game_fsm;
        end else begin
          M_game_fsm_d = ADD_LEVEL_game_fsm;
        end
      end
      ADD_LEVEL_game_fsm: begin
        we = 1'h1;
        asel = 3'h4;
        bsel = 3'h1;
        wdsel = 2'h0;
        wr = 16'h0003;
        M_game_fsm_d = GENERATE_PATTERN_game_fsm;
      end
      GENERATE_PATTERN_game_fsm: begin
        we = 1'h1;
        wdsel = 2'h2;
        wr = 16'h0000;
        M_game_fsm_d = IDLE_game_fsm;
      end
      GAMEOVER_game_fsm: begin
        if (reset_button == 1'h1) begin
          M_game_fsm_d = START_game_fsm;
        end
      end
    endcase
    if (time[0+3-:4] == 4'h0 && time[4+3-:4] == 4'h0 && time[8+3-:4] == 4'h0 && time[12+3-:4] == 4'h0) begin
      M_game_fsm_d = GAMEOVER_game_fsm;
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_game_fsm_q <= 1'h0;
    end else begin
      M_game_fsm_q <= M_game_fsm_d;
    end
  end
  
endmodule
