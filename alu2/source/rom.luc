module rom (
    input address[5],  // reset
    output outA[16],
    output outB[16],
    output alufn[6],
    output outZVN[3],
    output out[16]
  ) {
  const A = {16b1,16b1,b1000000000000000,b0111111111111111,16b1111,16b1111,16b1111,b1010010111110000,b1010010111110000,b1010010111110000,b0000000000000001,b0000000001111111,b1000000000000001,b0000000100000000,b0000000000000010,b1111010110101111,b1111010110101111,b1000101000001111,b0000010101011111,b1000101000001111,b0000000000010101};
  const B = {16b10,16b10,b0111111111111111,b0111111111111111,16b0101,16b0101,16b0101,b1111010110101111,b1111010110101111,b1111010110101111,b0000000000000011,b0000000000000101,b0000000000000011,b0000000000000000,b0000000110110111,b0001101000010101,b1111010110101111,b1111010110101111,b1000101000001111,b0000010101011111,b0000010110000000};
  const AL = {6b0,6b1,6b1,6b0,b011000,b011110,b010110,b011000,b011110,b010110,b100000,b100001,b100011,b111111,b111111,b110011,b110011,b110101,b110101,b110111,b000010};
  const ZVN = {b000,b001,b011,b011,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000,b000};
  const O = {16b11,b1111111111111111,16b1,b1111111111111110,16b0101,16b1111,16b1010,b1010010110100000,b1111010111111111,b0101000001011111,b0000000000001000,b0000000000000011,b1111000000000000,b0000000110100000,b0000000110100000,16b0,16b1,16b1,16b0,16b1,b0111001110000000};
  always {
    outA = A[address];
    outB = B[address];
    alufn = AL[address];
    outZVN = ZVN[address];
    out = O[address];
  }
}
