module pattern_rom (
    input addressr[3],  // reset
    input addressl[16],
    output out[16]
  ) {
  const A = {
    {
      16b101111111,16b100,16b11011,16b111111,16b111,16b111101111,16b101010101,16b101111101
      },
    {
      16b100,16b101111111,16b11011,16b111101111,16b111111,16b111,16b101111101,16b101010101
      },
    {
      16b11011,16b101111111,16b100,16b111111,16b111,16b111101111,16b101111101,16b101010101
      },
    {
      16b101111111,16b100,16b11011,16b111111,16b111,16b111101111,16b101010101,16b101111101
      },
    {
      16b11011,16b101111111,16b101111101,16b100,16b111,16b101010101,16b111111,16b111101111
      },
    {
      16b100,16b111101111,16b111111,16b101111111,16b111,16b101111101,16b11011,16b101010101
      },
    {
      16b101111111,16b100,16b111,16b111101111,16b11011,16b101010101,16b111111,16b101111101
      },
    {
      16b100,16b111101111,16b111111,16b101111111,16b111,16b101111101,16b11011,16b101010101
      },
    {
      16b101111111,16b100,16b111,16b111101111,16b11011,16b101010101,16b111111,16b101111101
      }
    };
 
  always {
    out = A[addressr][addressl[2:0]];
  }
}
